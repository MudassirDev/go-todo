// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tasks.sql

package database

import (
	"context"
	"time"
)

const createTask = `-- name: CreateTask :one
INSERT INTO tasks (
  id, userId, task, created_at, updated_at
) VALUES (
  ?, ?, ?, ?, ?
)
RETURNING id, userid, task, is_completed, created_at, updated_at
`

type CreateTaskParams struct {
	ID        interface{}
	Userid    interface{}
	Task      string
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error) {
	row := q.db.QueryRowContext(ctx, createTask,
		arg.ID,
		arg.Userid,
		arg.Task,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.Userid,
		&i.Task,
		&i.IsCompleted,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
